"""Initial migration

Revision ID: 98dd9cb687de
Revises: 
Create Date: 2025-02-11 13:32:38.208591

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '98dd9cb687de'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user')
    op.drop_table('template')
    op.drop_table('attendance')
    with op.batch_alter_table('fingerprint', schema=None) as batch_op:
        batch_op.drop_index('ix_fingerprint_user_id')

    op.drop_table('fingerprint')
    op.drop_table('test_user')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False))
        batch_op.add_column(sa.Column('name', sa.String(length=150), nullable=False))
        batch_op.add_column(sa.Column('tags', sa.JSON(), nullable=True))
        batch_op.drop_constraint('users_email_key', type_='unique')
        batch_op.drop_constraint('users_username_key', type_='unique')
        batch_op.drop_column('email')
        batch_op.drop_column('username')
        batch_op.drop_column('id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False))
        batch_op.add_column(sa.Column('username', sa.VARCHAR(length=150), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('email', sa.VARCHAR(length=150), autoincrement=False, nullable=False))
        batch_op.create_unique_constraint('users_username_key', ['username'])
        batch_op.create_unique_constraint('users_email_key', ['email'])
        batch_op.drop_column('tags')
        batch_op.drop_column('name')
        batch_op.drop_column('user_id')

    op.create_table('test_user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='test_user_pkey'),
    sa.UniqueConstraint('email', name='test_user_email_key'),
    sa.UniqueConstraint('username', name='test_user_username_key')
    )
    op.create_table('fingerprint',
    sa.Column('template_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('template_data', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('template_id', name='fingerprint_pkey')
    )
    with op.batch_alter_table('fingerprint', schema=None) as batch_op:
        batch_op.create_index('ix_fingerprint_user_id', ['user_id'], unique=False)

    op.create_table('attendance',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='attendance_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='attendance_pkey')
    )
    op.create_table('template',
    sa.Column('template_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('template_data', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('template_id', name='template_pkey'),
    sa.UniqueConstraint('user_id', name='template_user_id_key')
    )
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    sa.UniqueConstraint('email', name='user_email_key'),
    sa.UniqueConstraint('username', name='user_username_key')
    )
    # ### end Alembic commands ###
